{"ast":null,"code":"var _jsxFileName = \"D:\\\\GIT\\\\1\\u0441-extensions-info\\\\frontend\\\\src\\\\components\\\\MainContent.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React from \"react\";\nimport { useDatabase } from \"./ContexDatabaset\";\nimport { getConfigurationInfo } from '../services/configuration';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport AnalysisView from \"./AnalysisViewComponent\";\nimport ResultsView from \"./ResultsViewComponent\";\nimport { BDStates } from \"./States\";\nimport { useWebSocket } from \"../services/contexWebSocket\";\nimport { startManualAnalysis } from \"../services/cron\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useState,\n  useReducer,\n  useEffect\n} = React;\nexport const useStartAnalysis = databaseID => {\n  _s();\n  const [error, setError] = useState(null);\n  const manualAnalysis = useMutation({\n    mutationFn: id => startManualAnalysis(id),\n    onSuccess: () => {\n      setError(null);\n    },\n    onError: e => {\n      setError(e);\n      console.log(e);\n    }\n  });\n  return {\n    start: e => {\n      e.stopPropagation();\n      manualAnalysis.mutate(databaseID);\n    },\n    error: error\n  };\n};\n\n// отлов событий смены статуса по ws\n_s(useStartAnalysis, \"JG6sGnLdvsB+N8vDWruV2OoymKI=\", false, function () {\n  return [useMutation];\n});\nfunction useChangeState() {\n  _s2();\n  const {\n    subscribe\n  } = useWebSocket();\n  const [state, setState] = useState({});\n  useEffect(() => {\n    try {\n      const unsubscribe = subscribe(msg => {\n        const obj = JSON.parse(msg);\n\n        // фильтруем по типу\n        if (obj.type === \"new_state\") {\n          setState({\n            bd: obj.bd_id,\n            state: obj.msg\n          });\n        }\n      });\n      return unsubscribe;\n    } catch (e) {\n      console.error(\"Invalid WS message\");\n    }\n  }, [subscribe]);\n  return state;\n}\n_s2(useChangeState, \"PYSbNXpMXLlBGX4NQ2pgY7kp9DM=\", false, function () {\n  return [useWebSocket];\n});\nconst MainContent = () => {\n  _s3();\n  const {\n    selectedDb,\n    setSelectedDb\n  } = useDatabase();\n  const queryClient = useQueryClient();\n  const state = useChangeState();\n  const [_, forceRender] = useReducer(x => x + 1, 0); // счётчик для ререндеров\n  const {\n    start: startAnalysis,\n    error: errorAnalysis\n  } = useStartAnalysis(selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.ID);\n\n  // при смене статуса обновляем список БД\n  useEffect(() => {\n    queryClient.invalidateQueries({\n      queryKey: ['databases']\n    }).then(r => {\n      forceRender();\n      console.log(22);\n    });\n  }, [state, queryClient]);\n  const {\n    data: configuration,\n    isLoading,\n    error\n  } = useQuery({\n    queryKey: ['configuration', selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.ID],\n    queryFn: ({\n      queryKey\n    }) => {\n      const [, id] = queryKey;\n      return getConfigurationInfo(id);\n    },\n    select: data => data.data,\n    enabled: !!selectedDb // запрос выполняется только если selectedDb есть\n  });\n  if (error) {\n    console.log(error);\n    return null;\n  }\n  if ((selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.Status) === BDStates.ANALYZING) {\n    return /*#__PURE__*/_jsxDEV(AnalysisView, {\n      database: selectedDb\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n  if ((selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.Status) === BDStates.DONE) {\n    return /*#__PURE__*/_jsxDEV(ResultsView, {\n      conf: configuration,\n      database: selectedDb\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"empty-state\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-state-icon\",\n      children: \"\\u26A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), !selectedDb && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0431\\u0430\\u0437\\u0443 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u0441\\u043B\\u0435\\u0432\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 30\n    }, this), selectedDb && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0411\\u0430\\u0437\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0438 \\u0433\\u043E\\u0442\\u043E\\u0432\\u0430 \\u043A \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this), (selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.Status) === BDStates.NEW && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn--primary btn--lg\",\n      onClick: e => {\n        startAnalysis(e);\n      },\n      children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s3(MainContent, \"Ub45DOXWKsTXeJQjkzRAttBVkuI=\", false, function () {\n  return [useDatabase, useQueryClient, useChangeState, useStartAnalysis, useQuery];\n});\n_c = MainContent;\nexport default MainContent;\nvar _c;\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"names":["React","useDatabase","getConfigurationInfo","useMutation","useQuery","useQueryClient","AnalysisView","ResultsView","BDStates","useWebSocket","startManualAnalysis","jsxDEV","_jsxDEV","useState","useReducer","useEffect","useStartAnalysis","databaseID","_s","error","setError","manualAnalysis","mutationFn","id","onSuccess","onError","e","console","log","start","stopPropagation","mutate","useChangeState","_s2","subscribe","state","setState","unsubscribe","msg","obj","JSON","parse","type","bd","bd_id","MainContent","_s3","selectedDb","setSelectedDb","queryClient","_","forceRender","x","startAnalysis","errorAnalysis","ID","invalidateQueries","queryKey","then","r","data","configuration","isLoading","queryFn","select","enabled","Status","ANALYZING","database","fileName","_jsxFileName","lineNumber","columnNumber","DONE","conf","className","children","Name","NEW","onClick","_c","$RefreshReg$"],"sources":["D:/GIT/1с-extensions-info/frontend/src/components/MainContent.js"],"sourcesContent":["import React from \"react\";\r\nimport { useDatabase } from \"./ContexDatabaset\";\r\nimport {getConfigurationInfo } from '../services/configuration';\r\nimport {useMutation, useQuery, useQueryClient} from '@tanstack/react-query';\r\nimport AnalysisView from \"./AnalysisViewComponent\";\r\nimport ResultsView from \"./ResultsViewComponent\";\r\nimport {BDStates} from \"./States\";\r\nimport {useWebSocket} from \"../services/contexWebSocket\";\r\nimport {startManualAnalysis} from \"../services/cron\";\r\n\r\nconst { useState, useReducer, useEffect } = React;\r\n\r\nexport const useStartAnalysis = (databaseID) => {\r\n    const [error, setError] = useState(null);\r\n    const manualAnalysis = useMutation({\r\n        mutationFn: (id) => startManualAnalysis(id),\r\n        onSuccess: () => {\r\n            setError(null)\r\n        },\r\n        onError: (e) => {\r\n            setError(e);\r\n            console.log(e);\r\n        }\r\n    });\r\n\r\n    return {\r\n        start: (e) => {\r\n            e.stopPropagation();\r\n            manualAnalysis.mutate(databaseID);\r\n        },\r\n        error: error,\r\n    }\r\n};\r\n\r\n// отлов событий смены статуса по ws\r\nfunction useChangeState() {\r\n    const { subscribe } = useWebSocket();\r\n    const [state, setState] = useState({});\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const unsubscribe = subscribe((msg) => {\r\n                const obj = JSON.parse(msg);\r\n\r\n                // фильтруем по типу\r\n                if (obj.type === \"new_state\") {\r\n                    setState({bd: obj.bd_id, state: obj.msg});\r\n                }\r\n            });\r\n\r\n            return unsubscribe\r\n        } catch (e) {\r\n            console.error(\"Invalid WS message\");\r\n        }\r\n    }, [subscribe]);\r\n\r\n    return state;\r\n}\r\n\r\nconst MainContent = () => {\r\n    const { selectedDb, setSelectedDb } = useDatabase();\r\n    const queryClient = useQueryClient();\r\n    const state = useChangeState();\r\n    const [_, forceRender] = useReducer(x => x + 1, 0); // счётчик для ререндеров\r\n    const {start: startAnalysis, error: errorAnalysis} = useStartAnalysis(selectedDb?.ID);\r\n\r\n    // при смене статуса обновляем список БД\r\n    useEffect(() => {\r\n        queryClient.invalidateQueries({\r\n            queryKey: ['databases']\r\n        }).then(r => { forceRender(); console.log(22)});\r\n    }, [state, queryClient]);\r\n\r\n    const { data: configuration, isLoading, error } = useQuery({\r\n        queryKey: ['configuration', selectedDb?.ID],\r\n        queryFn: ({queryKey }) => {\r\n            const [, id] = queryKey;\r\n            return getConfigurationInfo(id)\r\n        } ,\r\n        select: (data) => data.data,\r\n        enabled: !!selectedDb, // запрос выполняется только если selectedDb есть\r\n    });\r\n    if(error) {\r\n        console.log(error)\r\n        return null\r\n    }\r\n\r\n    if (selectedDb?.Status === BDStates.ANALYZING) {\r\n        return (\r\n            <AnalysisView database={selectedDb} />\r\n        );\r\n    }\r\n\r\n    if (selectedDb?.Status === BDStates.DONE) {\r\n        return <ResultsView conf={configuration} database={selectedDb} />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"empty-state\">\r\n            <div className=\"empty-state-icon\">⚡</div>\r\n\r\n            {!selectedDb && (<p>Выберите базу данных из списка слева</p>)}\r\n            {selectedDb && (\r\n                <div>\r\n                    <h2>{selectedDb?.Name}</h2>\r\n                    <p>База данных и готова к анализу</p>\r\n                </div>\r\n            )}\r\n\r\n            {selectedDb?.Status === BDStates.NEW && (\r\n                <button\r\n                    className=\"btn btn--primary btn--lg\"\r\n                    onClick={(e) => {  startAnalysis(e) }}\r\n                >\r\n                    Начать анализ\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}