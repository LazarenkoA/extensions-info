{"ast":null,"code":"var _jsxFileName = \"D:\\\\GIT\\\\1\\u0441-extensions-info\\\\frontend\\\\src\\\\pages\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { getBaseSettings } from '../services/settingservice';\nimport UserCard from '../components/UserCard';\nimport UserModal from '../components/UserModal';\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const {\n    data: settings,\n    isLoading,\n    error\n  } = useQuery({\n    queryKey: ['settings'],\n    queryFn: getBaseSettings,\n    select: data => Array.isArray(data.data) ? data.data : []\n  });\n  const handleEditUser = user => {\n    setSelectedUser(user);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedUser(null);\n  };\n  const handleCreatePostgreSQL = () => {\n    alert(\"Создать PostgreSQL базу\");\n  };\n  const handleCreateMySQL = () => {\n    alert(\"Создать MySQL базу\");\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0435\\u043A...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u0435 \\u043A \\u0431\\u0430\\u0437\\u0430\\u043C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0431\\u0430\\u0437\\u0443\",\n        variant: \"primary\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: handleCreatePostgreSQL,\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C PostgreSQL \\u0431\\u0430\\u0437\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: handleCreateMySQL,\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C MySQL \\u0431\\u0430\\u0437\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-list\",\n      children: settings.length > 0 ? settings.map(user => /*#__PURE__*/_jsxDEV(UserCard, {\n        user: user,\n        onEdit: handleEditUser\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-settings\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(UserModal, {\n      user: selectedUser,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n};\n_s(Settings, \"BXCZ6upjnGaXSgw8OXoxenRMDDs=\", false, function () {\n  return [useQuery];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useQuery","getBaseSettings","UserCard","UserModal","DropdownButton","Dropdown","jsxDEV","_jsxDEV","Settings","_s","selectedUser","setSelectedUser","isModalOpen","setIsModalOpen","data","settings","isLoading","error","queryKey","queryFn","select","Array","isArray","handleEditUser","user","handleCloseModal","handleCreatePostgreSQL","alert","handleCreateMySQL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","id","title","variant","Item","onClick","length","map","onEdit","onClose","_c","$RefreshReg$"],"sources":["D:/GIT/1с-extensions-info/frontend/src/pages/Settings.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { getBaseSettings } from '../services/settingservice';\nimport UserCard from '../components/UserCard';\nimport UserModal from '../components/UserModal';\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Settings = () => {\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const { data: settings, isLoading, error } = useQuery({\n    queryKey: ['settings'],\n    queryFn: getBaseSettings,\n    select: data => Array.isArray(data.data) ? data.data : [],\n  });\n\n  const handleEditUser = user => {\n    setSelectedUser(user);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedUser(null);\n  };\n\n  const handleCreatePostgreSQL = () => {\n    alert(\"Создать PostgreSQL базу\");\n  };\n  const handleCreateMySQL = () => {\n    alert(\"Создать MySQL базу\");\n  };\n\n  if (isLoading) return <div className=\"loading\">Загрузка настроек...</div>;\n  if (error) return <div className=\"error\">Ошибка: {error.message}</div>;\n\n  return (\n      <div className=\"settings-page\">\n        <div className=\"settings-header\">\n          <h2>Подключение к базам</h2>\n          <DropdownButton\n              id=\"dropdown-basic-button\"\n              title=\"Добавить базу\"\n              variant=\"primary\"\n          >\n            <Dropdown.Item onClick={handleCreatePostgreSQL}>\n              Создать PostgreSQL базу\n            </Dropdown.Item>\n            <Dropdown.Item onClick={handleCreateMySQL}>\n              Создать MySQL базу\n            </Dropdown.Item>\n          </DropdownButton>\n        </div>\n\n        <div className=\"settings-list\">\n          {settings.length > 0 ? (\n              settings.map(user => (\n                  <UserCard\n                      key={user.id}\n                      user={user}\n                      onEdit={handleEditUser}\n                  />\n              ))\n          ) : (\n              <div className=\"no-settings\">\n                <p>Настройки не найдены</p>\n              </div>\n          )}\n        </div>\n\n        {isModalOpen && (\n            <UserModal\n                user={selectedUser}\n                onClose={handleCloseModal}\n            />\n        )}\n      </div>\n  );\n};\n\nexport default Settings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}