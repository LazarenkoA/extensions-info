{"ast":null,"code":"var _jsxFileName = \"D:\\\\GIT\\\\1\\u0441-extensions-info\\\\frontend\\\\src\\\\components\\\\MainContent.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React from \"react\";\nimport { useDatabase } from \"./ContexDatabaset\";\nimport { getConfigurationInfo } from '../services/configuration';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport AnalysisView from \"./AnalysisViewComponent\";\nimport ResultsView from \"./ResultsViewComponent\";\nimport { BDStates } from \"./States\";\nimport { useWebSocket } from \"../services/contexWebSocket\";\nimport { startManualAnalysis } from \"../services/cron\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useState,\n  useEffect,\n  useRef\n} = React;\nexport const useStartAnalysis = databaseID => {\n  _s();\n  const [error, setError] = useState(null);\n  const manualAnalysis = useMutation({\n    mutationFn: id => startManualAnalysis(id),\n    onSuccess: () => {\n      setError(null);\n    },\n    onError: e => {\n      setError(e);\n      console.log(e);\n    }\n  });\n  return {\n    start: e => {\n      e.stopPropagation();\n      manualAnalysis.mutate(databaseID);\n    },\n    error: error\n  };\n};\n_s(useStartAnalysis, \"JG6sGnLdvsB+N8vDWruV2OoymKI=\", false, function () {\n  return [useMutation];\n});\nfunction useChangeState() {\n  _s2();\n  const {\n    subscribe\n  } = useWebSocket();\n  const [state, setState] = useState({});\n  useEffect(() => {\n    try {\n      const unsubscribe = subscribe(msg => {\n        const obj = JSON.parse(msg);\n\n        // фильтруем по типу\n        if (obj.type === \"new_state\") {\n          setState({\n            bd: obj.bd_id,\n            state: obj.msg\n          });\n        }\n      });\n      return unsubscribe;\n    } catch (e) {\n      console.error(\"Invalid WS message\");\n    }\n  }, [subscribe]);\n  return state;\n}\n_s2(useChangeState, \"PYSbNXpMXLlBGX4NQ2pgY7kp9DM=\", false, function () {\n  return [useWebSocket];\n});\nconst MainContent = () => {\n  _s3();\n  const {\n    selectedDb,\n    setSelectedDb\n  } = useDatabase();\n  const queryClient = useQueryClient();\n  const state = useChangeState();\n  useEffect(() => {\n    queryClient.invalidateQueries({\n      queryKey: ['databases']\n    }).then(r => {});\n  }, [state]);\n  const {\n    data: configuration,\n    isLoading,\n    error\n  } = useQuery({\n    queryKey: ['configuration', selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.ID],\n    queryFn: ({\n      queryKey\n    }) => {\n      const [, id] = queryKey;\n      return getConfigurationInfo(id);\n    },\n    select: data => data.data,\n    enabled: !!selectedDb // запрос выполняется только если selectedDb есть\n  });\n  if (error) {\n    console.log(error);\n    return null;\n  }\n  if ((selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.Status) === BDStates.ANALYZING) {\n    return /*#__PURE__*/_jsxDEV(AnalysisView, {\n      database: selectedDb,\n      onComplete: () => {\n        setSelectedDb({\n          ...selectedDb,\n          Status: BDStates.DONE\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n  if ((selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.Status) === BDStates.DONE) {\n    return /*#__PURE__*/_jsxDEV(ResultsView, {\n      conf: configuration,\n      database: selectedDb\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"empty-state\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-state-icon\",\n      children: \"\\u26A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), !selectedDb && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0431\\u0430\\u0437\\u0443 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u0441\\u043B\\u0435\\u0432\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 30\n    }, this), selectedDb && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0411\\u0430\\u0437\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0438 \\u0433\\u043E\\u0442\\u043E\\u0432\\u0430 \\u043A \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), (selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.Status) === BDStates.NEW && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn--primary btn--lg\"\n      //onClick={(e) => { handleStartAnalysis(e, selectedDb, queryClient, setSelectedDb)}}\n      ,\n      children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s3(MainContent, \"ojI/WtJH7bPm4+SK4yRzriMRFQU=\", false, function () {\n  return [useDatabase, useQueryClient, useChangeState, useQuery];\n});\n_c = MainContent;\nexport default MainContent;\nvar _c;\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"names":["React","useDatabase","getConfigurationInfo","useMutation","useQuery","useQueryClient","AnalysisView","ResultsView","BDStates","useWebSocket","startManualAnalysis","jsxDEV","_jsxDEV","useState","useEffect","useRef","useStartAnalysis","databaseID","_s","error","setError","manualAnalysis","mutationFn","id","onSuccess","onError","e","console","log","start","stopPropagation","mutate","useChangeState","_s2","subscribe","state","setState","unsubscribe","msg","obj","JSON","parse","type","bd","bd_id","MainContent","_s3","selectedDb","setSelectedDb","queryClient","invalidateQueries","queryKey","then","r","data","configuration","isLoading","ID","queryFn","select","enabled","Status","ANALYZING","database","onComplete","DONE","fileName","_jsxFileName","lineNumber","columnNumber","conf","className","children","Name","NEW","_c","$RefreshReg$"],"sources":["D:/GIT/1с-extensions-info/frontend/src/components/MainContent.js"],"sourcesContent":["import React from \"react\";\r\nimport { useDatabase } from \"./ContexDatabaset\";\r\nimport {getConfigurationInfo } from '../services/configuration';\r\nimport {useMutation, useQuery, useQueryClient} from '@tanstack/react-query';\r\nimport AnalysisView from \"./AnalysisViewComponent\";\r\nimport ResultsView from \"./ResultsViewComponent\";\r\nimport {BDStates} from \"./States\";\r\nimport {useWebSocket} from \"../services/contexWebSocket\";\r\nimport {startManualAnalysis} from \"../services/cron\";\r\n\r\nconst { useState, useEffect, useRef } = React;\r\n\r\nexport const useStartAnalysis = (databaseID) => {\r\n    const [error, setError] = useState(null);\r\n    const manualAnalysis = useMutation({\r\n        mutationFn: (id) => startManualAnalysis(id),\r\n        onSuccess: () => {\r\n            setError(null)\r\n        },\r\n        onError: (e) => {\r\n            setError(e);\r\n            console.log(e);\r\n        }\r\n    });\r\n\r\n    return {\r\n        start: (e) => {\r\n            e.stopPropagation();\r\n            manualAnalysis.mutate(databaseID);\r\n        },\r\n        error: error,\r\n    }\r\n};\r\n\r\nfunction useChangeState() {\r\n    const { subscribe } = useWebSocket();\r\n    const [state, setState] = useState({});\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const unsubscribe = subscribe((msg) => {\r\n                const obj = JSON.parse(msg);\r\n\r\n                // фильтруем по типу\r\n                if (obj.type === \"new_state\") {\r\n                    setState({bd: obj.bd_id, state: obj.msg});\r\n                }\r\n            });\r\n\r\n            return unsubscribe\r\n        } catch (e) {\r\n            console.error(\"Invalid WS message\");\r\n        }\r\n    }, [subscribe]);\r\n\r\n    return state;\r\n}\r\n\r\nconst MainContent = () => {\r\n    const { selectedDb, setSelectedDb } = useDatabase();\r\n    const queryClient = useQueryClient();\r\n    const state = useChangeState();\r\n\r\n    useEffect(() => {\r\n        queryClient.invalidateQueries({\r\n            queryKey: ['databases']\r\n        }).then(r => {});\r\n    }, [state]);\r\n\r\n    const { data: configuration, isLoading, error } = useQuery({\r\n        queryKey: ['configuration', selectedDb?.ID],\r\n        queryFn: ({queryKey }) => {\r\n            const [, id] = queryKey;\r\n            return getConfigurationInfo(id)\r\n        } ,\r\n        select: (data) => data.data,\r\n        enabled: !!selectedDb, // запрос выполняется только если selectedDb есть\r\n    });\r\n    if(error) {\r\n        console.log(error)\r\n        return null\r\n    }\r\n\r\n    if (selectedDb?.Status === BDStates.ANALYZING) {\r\n        return (\r\n            <AnalysisView\r\n                database={selectedDb}\r\n                onComplete={() => {\r\n                    setSelectedDb({...selectedDb, Status: BDStates.DONE})\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (selectedDb?.Status === BDStates.DONE) {\r\n        return <ResultsView conf={configuration} database={selectedDb} />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"empty-state\">\r\n            <div className=\"empty-state-icon\">⚡</div>\r\n\r\n            {!selectedDb && (<p>Выберите базу данных из списка слева</p>)}\r\n            {selectedDb && (\r\n                <div>\r\n                    <h2>{selectedDb?.Name}</h2>\r\n                    <p>База данных и готова к анализу</p>\r\n                </div>\r\n            )}\r\n\r\n            {selectedDb?.Status === BDStates.NEW && (\r\n                <button\r\n                    className=\"btn btn--primary btn--lg\"\r\n                    //onClick={(e) => { handleStartAnalysis(e, selectedDb, queryClient, setSelectedDb)}}\r\n                >\r\n                    Начать анализ\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}