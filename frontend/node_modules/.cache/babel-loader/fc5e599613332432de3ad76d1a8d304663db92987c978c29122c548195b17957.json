{"ast":null,"code":"var _jsxFileName = \"D:\\\\GIT\\\\1\\u0441-extensions-info\\\\frontend\\\\src\\\\components\\\\MainContent.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React from \"react\";\nimport { useDatabase } from \"./ContexDatabaset\";\nimport { getConfigurationInfo } from '../services/configuration';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport AnalysisView from \"./AnalysisViewComponent\";\nimport ResultsView from \"./ResultsViewComponent\";\nimport { BDStates } from \"./States\";\nimport { useWebSocket } from \"../services/contexWebSocket\";\nimport { startManualAnalysis } from \"../services/cron\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useState,\n  useEffect\n} = React;\nexport const useStartAnalysis = databaseID => {\n  _s();\n  const [error, setError] = useState(null);\n  const manualAnalysis = useMutation({\n    mutationFn: id => startManualAnalysis(id),\n    onSuccess: () => {\n      setError(null);\n    },\n    onError: e => {\n      setError(e);\n      console.log(e);\n    }\n  });\n  return {\n    start: e => {\n      e.stopPropagation();\n      manualAnalysis.mutate(databaseID);\n    },\n    error: error\n  };\n};\n\n// отлов событий смены статуса по ws\n_s(useStartAnalysis, \"JG6sGnLdvsB+N8vDWruV2OoymKI=\", false, function () {\n  return [useMutation];\n});\nfunction useChangeState() {\n  _s2();\n  const {\n    subscribe\n  } = useWebSocket();\n  const [state, setState] = useState({});\n  useEffect(() => {\n    try {\n      const unsubscribe = subscribe(msg => {\n        const obj = JSON.parse(msg);\n\n        // фильтруем по типу\n        if (obj.type === \"new_state\") {\n          setState({\n            db: obj.db_id,\n            state: obj.msg\n          });\n        }\n      });\n      return unsubscribe;\n    } catch (e) {\n      console.error(\"Invalid WS message\");\n    }\n  }, [subscribe]);\n  return state;\n}\n\n// отлов логов по ws\n_s2(useChangeState, \"PYSbNXpMXLlBGX4NQ2pgY7kp9DM=\", false, function () {\n  return [useWebSocket];\n});\nexport function useLogs(dbId) {\n  _s3();\n  const {\n    subscribe\n  } = useWebSocket();\n  const [logs, setLogs] = useState([]);\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    try {\n      const unsubscribe = subscribe(msg => {\n        const obj = JSON.parse(msg);\n\n        // фильтруем по типу и ID\n        if (obj.type === \"log\") {\n          setLogs(obj);\n        }\n        if (obj.type === \"progress\" && obj.db_id === dbId) {\n          setProgress(obj.msg);\n        }\n      });\n      return unsubscribe;\n    } catch (e) {\n      console.error(\"Invalid WS message\");\n    }\n  }, [dbId, subscribe]);\n  return {\n    logs,\n    progress,\n    setLogs,\n    setProgress\n  };\n}\n_s3(useLogs, \"5gp97gq5Jw7WaVl/3sOyha5/VOM=\", false, function () {\n  return [useWebSocket];\n});\nconst MainContent = () => {\n  _s4();\n  const {\n    selectedDb,\n    setSelectedDb\n  } = useDatabase();\n  const queryClient = useQueryClient();\n  const state = useChangeState();\n  const {\n    logs,\n    progress,\n    setLogs,\n    setProgress\n  } = useLogs(selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.ID);\n  const {\n    start: startAnalysis,\n    error: errorAnalysis\n  } = useStartAnalysis(selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.ID);\n\n  // при смене статуса обновляем список БД\n  useEffect(() => {\n    if (state.state === BDStates.DONE) {\n      setLogs([]);\n    }\n    queryClient.invalidateQueries({\n      queryKey: ['databases']\n    }).then(r => {\n      if ((selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.ID) === state.db) setSelectedDb({\n        ...selectedDb,\n        Status: state.state\n      });\n    });\n  }, [state, queryClient]);\n  const {\n    data: configuration,\n    isLoading,\n    error\n  } = useQuery({\n    queryKey: ['configuration', selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.ID],\n    queryFn: ({\n      queryKey\n    }) => {\n      const [, id] = queryKey;\n      return getConfigurationInfo(id);\n    },\n    select: data => data.data,\n    enabled: !!(selectedDb !== null && selectedDb !== void 0 && selectedDb.ID) // запрос выполняется только если selectedDb есть\n  });\n  if (error) {\n    console.log(error);\n    return null;\n  }\n  if ((selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.Status) === BDStates.ANALYZING) {\n    return /*#__PURE__*/_jsxDEV(AnalysisView, {\n      database: selectedDb,\n      progress: progress,\n      logs: logs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  }\n  if ((selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.Status) === BDStates.DONE) {\n    return /*#__PURE__*/_jsxDEV(ResultsView, {\n      conf: configuration,\n      database: selectedDb\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 16\n    }, this);\n  }\n\n  // if (selectedDb?.Status === BDStates.ERROR) {\n  //     return null; // todo\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"empty-state\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-state-icon\",\n      children: \"\\u26A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), !selectedDb && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0431\\u0430\\u0437\\u0443 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u0441\\u043B\\u0435\\u0432\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 30\n    }, this), selectedDb && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0411\\u0430\\u0437\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0438 \\u0433\\u043E\\u0442\\u043E\\u0432\\u0430 \\u043A \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }, this), (selectedDb === null || selectedDb === void 0 ? void 0 : selectedDb.Status) === BDStates.NEW && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn--primary btn--lg\",\n      onClick: e => {\n        startAnalysis(e);\n      },\n      children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n_s4(MainContent, \"k0gKqWTOvr0f8uSgyuEVA8f1lg8=\", false, function () {\n  return [useDatabase, useQueryClient, useChangeState, useLogs, useStartAnalysis, useQuery];\n});\n_c = MainContent;\nexport default MainContent;\nvar _c;\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"names":["React","useDatabase","getConfigurationInfo","useMutation","useQuery","useQueryClient","AnalysisView","ResultsView","BDStates","useWebSocket","startManualAnalysis","jsxDEV","_jsxDEV","useState","useEffect","useStartAnalysis","databaseID","_s","error","setError","manualAnalysis","mutationFn","id","onSuccess","onError","e","console","log","start","stopPropagation","mutate","useChangeState","_s2","subscribe","state","setState","unsubscribe","msg","obj","JSON","parse","type","db","db_id","useLogs","dbId","_s3","logs","setLogs","progress","setProgress","MainContent","_s4","selectedDb","setSelectedDb","queryClient","ID","startAnalysis","errorAnalysis","DONE","invalidateQueries","queryKey","then","r","Status","data","configuration","isLoading","queryFn","select","enabled","ANALYZING","database","fileName","_jsxFileName","lineNumber","columnNumber","conf","className","children","Name","NEW","onClick","_c","$RefreshReg$"],"sources":["D:/GIT/1с-extensions-info/frontend/src/components/MainContent.js"],"sourcesContent":["import React from \"react\";\r\nimport { useDatabase } from \"./ContexDatabaset\";\r\nimport {getConfigurationInfo } from '../services/configuration';\r\nimport {useMutation, useQuery, useQueryClient} from '@tanstack/react-query';\r\nimport AnalysisView from \"./AnalysisViewComponent\";\r\nimport ResultsView from \"./ResultsViewComponent\";\r\nimport {BDStates} from \"./States\";\r\nimport {useWebSocket} from \"../services/contexWebSocket\";\r\nimport {startManualAnalysis} from \"../services/cron\";\r\n\r\nconst { useState, useEffect } = React;\r\n\r\nexport const useStartAnalysis = (databaseID) => {\r\n    const [error, setError] = useState(null);\r\n    const manualAnalysis = useMutation({\r\n        mutationFn: (id) => startManualAnalysis(id),\r\n        onSuccess: () => {\r\n            setError(null)\r\n        },\r\n        onError: (e) => {\r\n            setError(e);\r\n            console.log(e);\r\n        }\r\n    });\r\n\r\n    return {\r\n        start: (e) => {\r\n            e.stopPropagation();\r\n            manualAnalysis.mutate(databaseID);\r\n        },\r\n        error: error,\r\n    }\r\n};\r\n\r\n// отлов событий смены статуса по ws\r\nfunction useChangeState() {\r\n    const { subscribe } = useWebSocket();\r\n    const [state, setState] = useState({});\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const unsubscribe = subscribe((msg) => {\r\n                const obj = JSON.parse(msg);\r\n\r\n                // фильтруем по типу\r\n                if (obj.type === \"new_state\") {\r\n                    setState({db: obj.db_id, state: obj.msg});\r\n                }\r\n            });\r\n\r\n            return unsubscribe\r\n        } catch (e) {\r\n            console.error(\"Invalid WS message\");\r\n        }\r\n    }, [subscribe]);\r\n\r\n    return state;\r\n}\r\n\r\n// отлов логов по ws\r\nexport function useLogs(dbId) {\r\n    const { subscribe } = useWebSocket();\r\n    const [logs, setLogs] = useState([]);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const unsubscribe = subscribe((msg) => {\r\n                const obj = JSON.parse(msg);\r\n\r\n                // фильтруем по типу и ID\r\n                if (obj.type === \"log\" ) {\r\n                    setLogs(obj);\r\n                }\r\n                if (obj.type === \"progress\" && obj.db_id === dbId) {\r\n                    setProgress(obj.msg);\r\n                }\r\n            });\r\n\r\n            return unsubscribe\r\n        } catch (e) {\r\n            console.error(\"Invalid WS message\");\r\n        }\r\n    }, [dbId, subscribe]);\r\n\r\n    return {logs, progress, setLogs, setProgress};\r\n}\r\n\r\nconst MainContent = () => {\r\n    const { selectedDb, setSelectedDb } = useDatabase();\r\n    const queryClient = useQueryClient();\r\n    const state = useChangeState();\r\n    const {logs,progress,setLogs,setProgress} = useLogs(selectedDb?.ID)\r\n    const {start: startAnalysis, error: errorAnalysis} = useStartAnalysis(selectedDb?.ID);\r\n\r\n    // при смене статуса обновляем список БД\r\n    useEffect(() => {\r\n        if (state.state === BDStates.DONE) {\r\n            setLogs([])\r\n        }\r\n\r\n        queryClient.invalidateQueries({\r\n            queryKey: ['databases']\r\n        }).then(r => {\r\n            if(selectedDb?.ID === state.db)\r\n                setSelectedDb({...selectedDb, Status: state.state})\r\n        });\r\n    }, [state, queryClient]);\r\n\r\n    const { data: configuration, isLoading, error } = useQuery({\r\n        queryKey: ['configuration', selectedDb?.ID],\r\n        queryFn: ({queryKey }) => {\r\n            const [, id] = queryKey;\r\n            return getConfigurationInfo(id)\r\n        } ,\r\n        select: (data) => data.data,\r\n        enabled: !!selectedDb?.ID, // запрос выполняется только если selectedDb есть\r\n    });\r\n    if(error) {\r\n        console.log(error)\r\n        return null\r\n    }\r\n\r\n    if (selectedDb?.Status === BDStates.ANALYZING) {\r\n        return (\r\n            <AnalysisView\r\n                database={selectedDb}\r\n                progress={progress}\r\n                logs={logs}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (selectedDb?.Status === BDStates.DONE) {\r\n        return <ResultsView conf={configuration} database={selectedDb} />;\r\n    }\r\n\r\n    // if (selectedDb?.Status === BDStates.ERROR) {\r\n    //     return null; // todo\r\n    // }\r\n\r\n    return (\r\n        <div className=\"empty-state\">\r\n            <div className=\"empty-state-icon\">⚡</div>\r\n\r\n            {!selectedDb && (<p>Выберите базу данных из списка слева</p>)}\r\n            {selectedDb && (\r\n                <div>\r\n                    <h2>{selectedDb?.Name}</h2>\r\n                    <p>База данных и готова к анализу</p>\r\n                </div>\r\n            )}\r\n\r\n            {selectedDb?.Status === BDStates.NEW && (\r\n                <button\r\n                    className=\"btn btn--primary btn--lg\"\r\n                    onClick={(e) => {  startAnalysis(e) }}\r\n                >\r\n                    Начать анализ\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}