{"ast":null,"code":"var _jsxFileName = \"D:\\\\GIT\\\\1\\u0441-extensions-info\\\\frontend\\\\src\\\\components\\\\TreeNodeComponent.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useState,\n  useEffect,\n  useRef\n} = React;\nexport const DetailsPanel = ({\n  selectedItem,\n  extension,\n  onFunctionClick\n}) => {\n  if (!selectedItem) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-panel hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"details-title\",\n          children: \"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state-icon\",\n            children: \"\\uD83D\\uDCCB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043A\\u0442 \\u043C\\u0435\\u0442\\u0430\\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0438\\u043B\\u0438 \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u044E \\u0434\\u043B\\u044F \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u043F\\u0435\\u0440\\u0435\\u043E\\u043F\\u0440\\u0435\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  }\n  const renderMetadataDetails = objectData => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"details-title\",\n          children: [\"\\u041F\\u0435\\u0440\\u0435\\u043E\\u043F\\u0440\\u0435\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u044F: \", objectData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-content\",\n        children: objectData.extensions.map((ext, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"extension-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extension-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"extension-name\",\n              children: ext.extension\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extension-body\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"changes-list\",\n              children: ext.changes.map((change, changeIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: change\n              }, changeIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  };\n  const renderFunctionDetails = functionData => {\n    const getOverrideTypeClass = type => {\n      switch (type) {\n        case 'Вместо':\n          return 'vmestore';\n        case 'ИзменениеИКонтроль':\n          return 'izmenenie-i-kontrol';\n        case 'Перед':\n          return 'pered';\n        case 'После':\n          return 'posle';\n        default:\n          return 'posle';\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"details-title\",\n          children: [\"\\u041F\\u0435\\u0440\\u0435\\u043E\\u043F\\u0440\\u0435\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u044F \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u0438: \", functionData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-content\",\n        children: functionData.extensions.map((ext, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"extension-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extension-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"extension-name\",\n              children: ext.extension\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extension-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"function-override\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"override-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `override-type-badge ${getOverrideTypeClass(ext.overrideType)}`,\n                  children: ext.overrideType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"function-name-link\",\n                  onClick: () => onFunctionClick(ext),\n                  children: ext.functionName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"override-description\",\n                children: ext.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Determine if it's a metadata object or function\n  // const objectData = database.objectOverrides[selectedItem.id];\n  // const functionData = database.functionOverrides[selectedItem.id];\n\n  if (selectedItem.Type === '') {\n    return renderMetadataDetails(objectData);\n  } else if (functionData) {\n    return renderFunctionDetails(functionData);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"details-title\",\n        children: \"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0438 \\u043D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-icon\",\n          children: \"\\u2753\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u043F\\u0435\\u0440\\u0435\\u043E\\u043F\\u0440\\u0435\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u044F\\u0445 \\u0434\\u043B\\u044F \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0433\\u043E \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u0430 \\u043D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_c = DetailsPanel;\nconst TreeNode = ({\n  node,\n  level = 0,\n  selectedItem,\n  setSelectedItem\n}) => {\n  _s();\n  const [expanded, setExpanded] = useState(false);\n  const handleToggle = () => {\n    setExpanded(!expanded);\n  };\n  if (!node) {\n    return null;\n  }\n  const hasChildren = node.Children && node.Children.length > 0;\n  const hasFunctions = node.Funcs && node.Funcs.length > 0;\n  //const hasModules = node.modules && node.modules.length > 0;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-node\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tree-item ${expanded ? 'expanded' : ''} ${selectedItem ? 'selected' : ''}`,\n        onClick: () => setSelectedItem(node),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tree-toggle\",\n          onClick: handleToggle,\n          children: hasChildren || hasFunctions ? expanded ? '▼' : '▶' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tree-icon ${node.Type === 'function' ? 'function' : node.Type === 'module' ? 'item' : node.Type}`,\n          children: node.Type === 'folder' ? '📁' : node.Type === 'module' ? '⚙️' : node.Type === 'function' ? '⚡' : '📄'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tree-label\",\n          children: node.ObjectName || node.Type || node.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), node.status && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tree-status ${node.status}`,\n          children: node.status === 'modified' ? 'Изменен' : node.status === 'added' ? 'Добавлен' : 'Удален'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-children\",\n        children: [hasChildren && node.Children.map((child, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n          node: child,\n          level: level + 1,\n          selectedItem: selectedItem,\n          setSelectedItem: setSelectedItem\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }, this)), hasFunctions && node.Funcs.map((func, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n          node: func,\n          level: level + 1,\n          selectedItem: selectedItem,\n          setSelectedItem: setSelectedItem\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n_s(TreeNode, \"DuL5jiiQQFgbn7gBKAyxwS/H4Ek=\");\n_c2 = TreeNode;\nexport default TreeNode;\nvar _c, _c2;\n$RefreshReg$(_c, \"DetailsPanel\");\n$RefreshReg$(_c2, \"TreeNode\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","useState","useEffect","useRef","DetailsPanel","selectedItem","extension","onFunctionClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderMetadataDetails","objectData","name","extensions","map","ext","index","changes","change","changeIndex","renderFunctionDetails","functionData","getOverrideTypeClass","type","overrideType","onClick","functionName","description","Type","_c","TreeNode","node","level","setSelectedItem","_s","expanded","setExpanded","handleToggle","hasChildren","Children","length","hasFunctions","Funcs","ObjectName","Name","status","child","func","_c2","$RefreshReg$"],"sources":["D:/GIT/1с-extensions-info/frontend/src/components/TreeNodeComponent.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst { useState, useEffect, useRef } = React;\r\n\r\nexport const DetailsPanel = ({ selectedItem, extension, onFunctionClick }) => {\r\n    if (!selectedItem) {\r\n        return (\r\n            <div className=\"details-panel hidden\">\r\n                <div className=\"details-header\">\r\n                    <h3 className=\"details-title\">Детали</h3>\r\n                </div>\r\n                <div className=\"details-content\">\r\n                    <div className=\"empty-state\">\r\n                        <div className=\"empty-state-icon\">📋</div>\r\n                        <h4>Выберите элемент</h4>\r\n                        <p>Выберите объект метаданных или функцию для просмотра переопределений</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderMetadataDetails = (objectData) => {\r\n        return (\r\n            <div className=\"details-panel\">\r\n                <div className=\"details-header\">\r\n                    <h3 className=\"details-title\">Переопределения: {objectData.name}</h3>\r\n                </div>\r\n                <div className=\"details-content\">\r\n                    {objectData.extensions.map((ext, index) => (\r\n                        <div key={index} className=\"extension-section\">\r\n                            <div className=\"extension-header\">\r\n                                <h4 className=\"extension-name\">{ext.extension}</h4>\r\n                            </div>\r\n                            <div className=\"extension-body\">\r\n                                <ul className=\"changes-list\">\r\n                                    {ext.changes.map((change, changeIndex) => (\r\n                                        <li key={changeIndex}>{change}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderFunctionDetails = (functionData) => {\r\n        const getOverrideTypeClass = (type) => {\r\n            switch (type) {\r\n                case 'Вместо': return 'vmestore';\r\n                case 'ИзменениеИКонтроль': return 'izmenenie-i-kontrol';\r\n                case 'Перед': return 'pered';\r\n                case 'После': return 'posle';\r\n                default: return 'posle';\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className=\"details-panel\">\r\n                <div className=\"details-header\">\r\n                    <h3 className=\"details-title\">Переопределения функции: {functionData.name}</h3>\r\n                </div>\r\n                <div className=\"details-content\">\r\n                    {functionData.extensions.map((ext, index) => (\r\n                        <div key={index} className=\"extension-section\">\r\n                            <div className=\"extension-header\">\r\n                                <h4 className=\"extension-name\">{ext.extension}</h4>\r\n                            </div>\r\n                            <div className=\"extension-body\">\r\n                                <div className=\"function-override\">\r\n                                    <div className=\"override-header\">\r\n                    <span className={`override-type-badge ${getOverrideTypeClass(ext.overrideType)}`}>\r\n                      {ext.overrideType}\r\n                    </span>\r\n                                        <span\r\n                                            className=\"function-name-link\"\r\n                                            onClick={() => onFunctionClick(ext)}\r\n                                        >\r\n                      {ext.functionName}\r\n                    </span>\r\n                                    </div>\r\n                                    <div className=\"override-description\">\r\n                                        {ext.description}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Determine if it's a metadata object or function\r\n    // const objectData = database.objectOverrides[selectedItem.id];\r\n    // const functionData = database.functionOverrides[selectedItem.id];\r\n\r\n    if (selectedItem.Type === '') {\r\n        return renderMetadataDetails(objectData);\r\n    } else if (functionData) {\r\n        return renderFunctionDetails(functionData);\r\n    }\r\n\r\n    return (\r\n        <div className=\"details-panel\">\r\n            <div className=\"details-header\">\r\n                <h3 className=\"details-title\">Детали недоступны</h3>\r\n            </div>\r\n            <div className=\"details-content\">\r\n                <div className=\"empty-state\">\r\n                    <div className=\"empty-state-icon\">❓</div>\r\n                    <h4>Данные не найдены</h4>\r\n                    <p>Информация о переопределениях для выбранного элемента недоступна</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TreeNode = ({ node, level = 0, selectedItem, setSelectedItem }) => {\r\n    const [expanded, setExpanded] = useState(false);\r\n    const handleToggle = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    if(!node) {\r\n        return null\r\n    }\r\n\r\n\r\n    const hasChildren = node.Children && node.Children.length > 0;\r\n    const hasFunctions = node.Funcs && node.Funcs.length > 0;\r\n    //const hasModules = node.modules && node.modules.length > 0;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"tree-node\">\r\n                <div\r\n                    className={`tree-item ${expanded ? 'expanded' : ''} ${selectedItem ? 'selected' : ''}`}\r\n                    onClick={() => setSelectedItem(node)}\r\n                >\r\n                    <div className=\"tree-toggle\" onClick={handleToggle}>\r\n                        {(hasChildren || hasFunctions) ? (expanded ? '▼' : '▶') : ''}\r\n                    </div>\r\n                    <div className={`tree-icon ${node.Type === 'function' ? 'function' : node.Type === 'module' ? 'item' : node.Type}`}>\r\n                        {node.Type === 'folder' ? '📁' :\r\n                            node.Type === 'module' ? '⚙️' :\r\n                                node.Type === 'function' ? '⚡' : '📄'}\r\n                    </div>\r\n                    <div className=\"tree-label\">\r\n                        {node.ObjectName || node.Type || node.Name}\r\n                    </div>\r\n                    {node.status && (\r\n                        <div className={`tree-status ${node.status}`}>\r\n                            {node.status === 'modified' ? 'Изменен' :\r\n                                node.status === 'added' ? 'Добавлен' : 'Удален'}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {expanded && (\r\n                    <div className=\"tree-children\">\r\n                        {hasChildren && node.Children.map((child, index) => (\r\n                            <TreeNode\r\n                                key={index}\r\n                                node={child}\r\n                                level={level + 1}\r\n                                selectedItem={selectedItem}\r\n                                setSelectedItem={setSelectedItem}\r\n                            />\r\n                        ))}\r\n                        {/*{hasModules && node.modules.map((module, index) => (*/}\r\n                        {/*    <TreeNode*/}\r\n                        {/*        key={index}*/}\r\n                        {/*        node={module}*/}\r\n                        {/*        level={level + 1}*/}\r\n                        {/*        type=\"module\"*/}\r\n                        {/*    />*/}\r\n                        {/*))}*/}\r\n                        {hasFunctions && node.Funcs.map((func, index) => (\r\n                            <TreeNode\r\n                                key={index}\r\n                                node={func}\r\n                                level={level + 1}\r\n                                selectedItem={selectedItem}\r\n                                setSelectedItem={setSelectedItem}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default TreeNode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}