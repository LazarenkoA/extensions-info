{"ast":null,"code":"var _jsxFileName = \"D:\\\\GIT\\\\1\\u0441-extensions-info\\\\frontend\\\\src\\\\services\\\\contexWebSocket.js\",\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WS_URL = process.env.REACT_WS_URL || 'http://localhost:8080/api/v1/ws';\nconst WebSocketContext = /*#__PURE__*/createContext(null);\nexport const WebSocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [messages, setMessages] = useState([]);\n  const wsRef = useRef(null);\n  const heartbeatRef = useRef(null);\n  const openWSConn = () => {\n    var _s = $RefreshSig$();\n    const ws = new WebSocket(WS_URL); // твой эндпоинт\n    wsRef.current = ws;\n    ws.onopen = () => {\n      console.log(\"✅ WS connected\");\n      // запускаем keepalive\n      clearInterval(heartbeatRef.current); // очистим старый\n      heartbeatRef.current = setInterval(() => {\n        if (ws.readyState === WebSocket.OPEN) {\n          ws.send(JSON.stringify({\n            type: \"ping\"\n          }));\n        }\n        if (ws.readyState === WebSocket.CLOSED) {\n          console.log(\"🔌 write to closed WS\");\n          openWSConn();\n        }\n      }, 5000); // каждые 5 сек\n    };\n    ws.onmessage = _s(event => {\n      _s();\n      setMessages(prev => {\n        return [...prev, event.data];\n      });\n      useEffect(() => {\n        console.log(messages);\n      }, [messages]);\n    }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n    ws.onerror = err => {\n      console.error(\"❌ WS error\", err);\n    };\n  };\n  useEffect(() => {\n    openWSConn();\n    if (wsRef.current) {\n      wsRef.current.onclose = () => {\n        console.log(\"🔌 WS closed\");\n      };\n    }\n    return () => {\n      var _wsRef$current;\n      (_wsRef$current = wsRef.current) === null || _wsRef$current === void 0 ? void 0 : _wsRef$current.close();\n      clearInterval(heartbeatRef.current);\n    };\n  }, []);\n  const sendMessage = msg => {\n    var _wsRef$current2;\n    if (((_wsRef$current2 = wsRef.current) === null || _wsRef$current2 === void 0 ? void 0 : _wsRef$current2.readyState) === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify(msg));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(WebSocketContext.Provider, {\n    value: {\n      messages,\n      sendMessage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s2(WebSocketProvider, \"dSf6Oa72/O0WmqOWhhn6O+jYtLw=\");\n_c = WebSocketProvider;\nexport const useWebSocket = () => {\n  _s3();\n  return useContext(WebSocketContext);\n};\n_s3(useWebSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"WebSocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useRef","useState","jsxDEV","_jsxDEV","WS_URL","process","env","REACT_WS_URL","WebSocketContext","WebSocketProvider","children","_s2","messages","setMessages","wsRef","heartbeatRef","openWSConn","_s","$RefreshSig$","ws","WebSocket","current","onopen","console","log","clearInterval","setInterval","readyState","OPEN","send","JSON","stringify","type","CLOSED","onmessage","event","prev","data","onerror","err","error","onclose","_wsRef$current","close","sendMessage","msg","_wsRef$current2","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWebSocket","_s3","$RefreshReg$"],"sources":["D:/GIT/1с-extensions-info/frontend/src/services/contexWebSocket.js"],"sourcesContent":["\r\nimport React, { createContext, useContext, useEffect, useRef, useState } from 'react';\r\n\r\nconst WS_URL = process.env.REACT_WS_URL || 'http://localhost:8080/api/v1/ws';\r\nconst WebSocketContext = createContext(null);\r\n\r\nexport const WebSocketProvider = ({ children }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const wsRef = useRef(null);\r\n    const heartbeatRef = useRef(null);\r\n\r\n    const openWSConn = () => {\r\n        const ws = new WebSocket(WS_URL); // твой эндпоинт\r\n        wsRef.current = ws;\r\n\r\n        ws.onopen = () => {\r\n            console.log(\"✅ WS connected\");\r\n            // запускаем keepalive\r\n            clearInterval(heartbeatRef.current); // очистим старый\r\n            heartbeatRef.current = setInterval(() => {\r\n                if (ws.readyState === WebSocket.OPEN) {\r\n                    ws.send(JSON.stringify({ type: \"ping\" }));\r\n                }\r\n                if (ws.readyState === WebSocket.CLOSED) {\r\n                    console.log(\"🔌 write to closed WS\");\r\n                    openWSConn();\r\n                }\r\n            }, 5_000); // каждые 5 сек\r\n        };\r\n\r\n        ws.onmessage = (event) => {\r\n            setMessages((prev) => { return [...prev, event.data] });\r\n            useEffect(() => {\r\n                console.log(messages)\r\n            }, [messages])\r\n        };\r\n\r\n        ws.onerror = (err) => {\r\n            console.error(\"❌ WS error\", err);\r\n        };\r\n    }\r\n\r\n    useEffect(() => {\r\n       openWSConn()\r\n        if(wsRef.current) {\r\n            wsRef.current.onclose = () => {\r\n                console.log(\"🔌 WS closed\");\r\n            };\r\n        }\r\n\r\n       return () => {\r\n          wsRef.current?.close();\r\n          clearInterval(heartbeatRef.current);\r\n       };\r\n    }, []);\r\n\r\n    const sendMessage = (msg) => {\r\n        if (wsRef.current?.readyState === WebSocket.OPEN) {\r\n            wsRef.current.send(JSON.stringify(msg));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <WebSocketContext.Provider value={{ messages, sendMessage }}>\r\n            {children}\r\n        </WebSocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useWebSocket = () => useContext(WebSocketContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}