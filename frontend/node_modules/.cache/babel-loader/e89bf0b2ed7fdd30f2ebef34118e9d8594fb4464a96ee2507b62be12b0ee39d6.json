{"ast":null,"code":"var _jsxFileName = \"D:\\\\GIT\\\\1\\u0441-extensions-info\\\\frontend\\\\src\\\\components\\\\DatabaseItemComponent.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { getBaseSettings, deleteBaseSettings } from '../services/settingservice';\nimport { useQuery } from '@tanstack/react-query';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getStatusText = status => {\n  switch (status) {\n    case 'new':\n      return 'Новая';\n    case 'analyzing':\n      return 'Анализ';\n    case 'done':\n      return 'Готово';\n    case 'error':\n      return 'Ошибка';\n    default:\n      return 'Неизвестно';\n  }\n};\nfunction useDeleteBaseSettings() {\n  _s();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: id => deleteBaseSettings(id),\n    onSuccess: () => {\n      // после успешного удаления — обновим кэш\n      queryClient.invalidateQueries({\n        queryKey: ['databases']\n      }).then(r => {});\n    }\n  });\n}\n_s(useDeleteBaseSettings, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nconst DatabaseList = () => {\n  _s2();\n  const {\n    useState,\n    useEffect,\n    useRef\n  } = React;\n  const {\n    data: databases,\n    isLoading,\n    error\n  } = useQuery({\n    queryKey: ['databases'],\n    queryFn: getBaseSettings,\n    select: data => data.data\n  });\n  if (error) {\n    console.log(error);\n  }\n  let first = 0;\n  if (databases && databases.length > 0) {\n    first = databases[0];\n  }\n  const [activeDatabaseId, setActiveDatabaseId] = useState(first);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"database-list\",\n    children: databases && databases.map(db => /*#__PURE__*/_jsxDEV(DatabaseItem, {\n      database: db,\n      isActive: db.ID === activeDatabaseId,\n      setActiveDatabase: id => {\n        setActiveDatabaseId(id);\n      }\n    }, db.ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s2(DatabaseList, \"Y0xTRjMfPWzYxj+3Wi4GyRDLbF0=\", false, function () {\n  return [useQuery];\n});\n_c = DatabaseList;\nfunction onStartAnalysis(id) {}\nconst DatabaseItem = ({\n  database,\n  isActive,\n  setActiveDatabase\n}) => {\n  _s3();\n  const handleStartAnalysis = e => {\n    e.stopPropagation();\n    onStartAnalysis(database.ID);\n  };\n  const deleteMutation = useDeleteBaseSettings();\n  const onClick = id => {\n    setActiveDatabase(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `database-item ${isActive ? 'active' : ''}`,\n    onClick: () => onClick(database.ID),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"database-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-btn\",\n        onClick: e => {\n          e.stopPropagation();\n          deleteMutation.mutate(database.ID);\n        },\n        title: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0431\\u0430\\u0437\\u0443\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"database-item-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"database-name\",\n        children: database.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"database-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status-indicator ${database.Status}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: getStatusText(database.Status)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"database-details\",\n      children: [database.ConnectionString, database.lastAnalysis && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0437: \", database.lastAnalysis]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), database.Status === 'analyzing' && database.progress && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"database-progress\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-fill\",\n        style: {\n          width: `${database.progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this), database.Status === 'new' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--primary btn--sm\",\n        style: {\n          marginTop: '8px',\n          width: '100%'\n        },\n        onClick: () => onClick(database.ID),\n        children: \"\\u0420\\u0430\\u0441\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--primary btn--sm\",\n        onClick: handleStartAnalysis,\n        style: {\n          marginTop: '8px',\n          width: '100%'\n        },\n        children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s3(DatabaseItem, \"7SdjNdQmmF2w2UK0anYI8pA956Y=\", false, function () {\n  return [useDeleteBaseSettings];\n});\n_c2 = DatabaseItem;\nexport default DatabaseList;\nvar _c, _c2;\n$RefreshReg$(_c, \"DatabaseList\");\n$RefreshReg$(_c2, \"DatabaseItem\");","map":{"version":3,"names":["getBaseSettings","deleteBaseSettings","useQuery","useMutation","useQueryClient","React","jsxDEV","_jsxDEV","getStatusText","status","useDeleteBaseSettings","_s","queryClient","mutationFn","id","onSuccess","invalidateQueries","queryKey","then","r","DatabaseList","_s2","useState","useEffect","useRef","data","databases","isLoading","error","queryFn","select","console","log","first","length","activeDatabaseId","setActiveDatabaseId","className","children","map","db","DatabaseItem","database","isActive","ID","setActiveDatabase","fileName","_jsxFileName","lineNumber","columnNumber","_c","onStartAnalysis","_s3","handleStartAnalysis","e","stopPropagation","deleteMutation","onClick","mutate","title","Name","Status","ConnectionString","lastAnalysis","progress","style","width","display","gap","marginTop","_c2","$RefreshReg$"],"sources":["D:/GIT/1с-extensions-info/frontend/src/components/DatabaseItemComponent.js"],"sourcesContent":["import { getBaseSettings, deleteBaseSettings } from '../services/settingservice';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport React from \"react\";\r\n\r\nconst getStatusText = (status) => {\r\n    switch (status) {\r\n        case 'new': return 'Новая';\r\n        case 'analyzing': return 'Анализ';\r\n        case 'done': return 'Готово';\r\n        case 'error': return 'Ошибка';\r\n        default: return 'Неизвестно';\r\n    }\r\n};\r\n\r\nfunction useDeleteBaseSettings() {\r\n    const queryClient = useQueryClient();\r\n\r\n    return useMutation({\r\n        mutationFn: (id) => deleteBaseSettings(id),\r\n        onSuccess: () => {\r\n            // после успешного удаления — обновим кэш\r\n            queryClient.invalidateQueries({\r\n                queryKey: ['databases']\r\n            }).then(r => {});\r\n        },\r\n    });\r\n}\r\n\r\nconst DatabaseList = () => {\r\n    const {useState, useEffect, useRef} = React;\r\n    const { data: databases, isLoading, error } = useQuery({\r\n        queryKey: ['databases'],\r\n        queryFn: getBaseSettings,\r\n        select: (data) => data.data,\r\n    });\r\n    if(error) {\r\n        console.log(error)\r\n         \r\n    }\r\n\r\n    let first = 0;\r\n    if(databases && databases.length > 0) {\r\n        first = databases[0]\r\n    }\r\n\r\n\r\n\r\n    const [activeDatabaseId, setActiveDatabaseId] = useState(first);\r\n\r\n    return(\r\n        <div className=\"database-list\">\r\n            { databases && databases.map((db) => (\r\n                    <DatabaseItem\r\n                        key={db.ID}\r\n                        database={db}\r\n                        isActive={db.ID === activeDatabaseId}\r\n                        setActiveDatabase={(id) => {setActiveDatabaseId(id)}}\r\n                        />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction onStartAnalysis(id) {\r\n\r\n}\r\n\r\nconst DatabaseItem = ({database, isActive, setActiveDatabase}) => {\r\n    const handleStartAnalysis = (e) => {\r\n        e.stopPropagation();\r\n        onStartAnalysis(database.ID);\r\n    };\r\n    const deleteMutation = useDeleteBaseSettings();\r\n\r\n    const onClick = (id) => {\r\n        setActiveDatabase(id)\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n            className={`database-item ${isActive ? 'active' : ''}`}\r\n            onClick={() => onClick(database.ID)}\r\n        >\r\n            <div className=\"database-actions\">\r\n                <button\r\n                    className=\"remove-btn\"\r\n                    onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        deleteMutation.mutate(database.ID);\r\n                    }}\r\n                    title=\"Удалить базу\"\r\n                >\r\n                    ×\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"database-item-header\">\r\n                <div className=\"database-name\">{database.Name}</div>\r\n                <div className=\"database-status\">\r\n                    <div className={`status-indicator ${database.Status}`}></div>\r\n                    <span>{getStatusText(database.Status)}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"database-details\">\r\n                {database.ConnectionString}\r\n                {database.lastAnalysis && (\r\n                    <div>Анализ: {database.lastAnalysis}</div>\r\n                )}\r\n            </div>\r\n\r\n            {database.Status === 'analyzing' && database.progress && (\r\n                <div className=\"database-progress\">\r\n                    <div\r\n                        className=\"progress-fill\"\r\n                        style={{width: `${database.progress}%`}}\r\n                    ></div>\r\n                </div>\r\n            )}\r\n\r\n            {database.Status === 'new' && (\r\n                <div style={{ display: 'flex', gap: '8px' }}>\r\n                    <button\r\n                        className=\"btn btn--primary btn--sm\"\r\n                        style={{marginTop: '8px', width: '100%'}}\r\n                        onClick={() => onClick(database.ID)}\r\n                    >\r\n                        Расписание\r\n                    </button>\r\n                    <button className=\"btn btn--primary btn--sm\"\r\n                            onClick={handleStartAnalysis}\r\n                            style={{marginTop: '8px', width: '100%'}} >\r\n                        Начать анализ\r\n                    </button>\r\n                </div>\r\n            )\r\n}\r\n</div>\r\n)\r\n    ;\r\n};\r\n\r\nexport default DatabaseList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}