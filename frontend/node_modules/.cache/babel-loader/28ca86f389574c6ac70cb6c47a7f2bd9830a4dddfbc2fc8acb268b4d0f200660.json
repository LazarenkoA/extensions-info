{"ast":null,"code":"var _jsxFileName = \"D:\\\\GIT\\\\1\\u0441-extensions-info\\\\frontend\\\\src\\\\components\\\\AnalysisViewComponent.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { setCronSettings, startManualAnalysis } from \"../services/cron\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getBaseSettings } from \"../services/settingservice\";\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useState,\n  useEffect,\n  useRef\n} = React;\nconst analysisLog = [\"Начало анализа базы данных\", \"Подключение к серверу 1С...\", \"Подключение установлено успешно\", \"Выгрузка конфигурации...\", \"Конфигурация выгружена (УТ 11.4.16.242)\", \"Поиск установленных расширений...\", \"Найдено расширений: 3\", \"Анализ расширения: КастомныеДоработки\", \"Найдено переопределенных объектов: 5\", \"Анализ переопределенных процедур и функций...\", \"Найдено переопределенных методов: 6\", \"Анализ завершен успешно\"];\nconst AnalysisView = ({\n  database,\n  onComplete,\n  onCancel\n}) => {\n  _s();\n  const manualAnalysis = useMutation({\n    mutationFn: setCronSettings,\n    onError: error => {\n      console.log(error);\n    },\n    onSuccess: () => {\n      // обновим кэш\n      queryClient.invalidateQueries({\n        queryKey: ['databases']\n      }).then(r => {});\n    }\n  });\n  return null;\n  const [currentStep, setCurrentStep] = useState(0);\n  const [logs, setLogs] = useState([]);\n  const [showLogs, setShowLogs] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const logEndRef = useRef(null);\n  const steps = [\"Подключение к серверу 1С...\", \"Выгрузка конфигурации...\", \"Анализ расширений...\", \"Обработка метаданных...\"];\n  useEffect(() => {\n    console.log(`Начало анализа базы данных: ${database.Name}`);\n    const analysisTimer = setTimeout(() => {\n      let logIndex = 0;\n      const logInterval = setInterval(() => {\n        if (logIndex < analysisLog.length) {\n          setLogs(prev => [...prev, analysisLog[logIndex]]);\n          setProgress(Math.floor((logIndex + 1) / analysisLog.length * 100));\n          logIndex++;\n        } else {\n          clearInterval(logInterval);\n          console.log(`Анализ завершен для базы: ${database.Name}`);\n          setTimeout(() => onComplete(database.ID), 1000);\n        }\n      }, 300);\n      const stepInterval = setInterval(() => {\n        setCurrentStep(prev => {\n          if (prev < steps.length - 1) {\n            return prev + 1;\n          } else {\n            clearInterval(stepInterval);\n            return prev;\n          }\n        });\n      }, 800);\n      return () => {\n        clearInterval(logInterval);\n        clearInterval(stepInterval);\n      };\n    }, 500);\n    return () => clearTimeout(analysisTimer);\n  }, [database.ID]);\n  useEffect(() => {\n    if (logEndRef.current) {\n      logEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [logs]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analysis-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-text\",\n        children: [\"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0437 \\u0431\\u0430\\u0437\\u044B: \", database.Name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"substatus-text\",\n        children: steps[currentStep]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"substatus-text\",\n        children: [\"\\u041F\\u0440\\u043E\\u0433\\u0440\\u0435\\u0441\\u0441: \", progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn--secondary log-toggle\",\n          onClick: () => setShowLogs(!showLogs),\n          children: showLogs ? 'Скрыть лог анализа' : 'Показать лог анализа'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), showLogs && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-viewer\",\n          children: [logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"log-entry\",\n            children: log\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: logEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(AnalysisView, \"dCT397WQw1CBa7YYZ52qqh0/AIo=\", false, function () {\n  return [useMutation];\n});\n_c = AnalysisView;\nexport default AnalysisView;\nvar _c;\n$RefreshReg$(_c, \"AnalysisView\");","map":{"version":3,"names":["React","setCronSettings","startManualAnalysis","useQuery","getBaseSettings","useMutation","useQueryClient","jsxDEV","_jsxDEV","useState","useEffect","useRef","analysisLog","AnalysisView","database","onComplete","onCancel","_s","manualAnalysis","mutationFn","onError","error","console","log","onSuccess","queryClient","invalidateQueries","queryKey","then","r","currentStep","setCurrentStep","logs","setLogs","showLogs","setShowLogs","progress","setProgress","logEndRef","steps","Name","analysisTimer","setTimeout","logIndex","logInterval","setInterval","length","prev","Math","floor","clearInterval","ID","stepInterval","clearTimeout","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","ref","_c","$RefreshReg$"],"sources":["D:/GIT/1с-extensions-info/frontend/src/components/AnalysisViewComponent.js"],"sourcesContent":["import React from \"react\";\r\nimport {setCronSettings, startManualAnalysis} from \"../services/cron\";\r\nimport {useQuery} from \"@tanstack/react-query\";\r\nimport {getBaseSettings} from \"../services/settingservice\";\r\nimport {useMutation, useQueryClient} from '@tanstack/react-query';\r\n\r\nconst { useState, useEffect, useRef } = React;\r\nconst analysisLog = [\r\n    \"Начало анализа базы данных\",\r\n    \"Подключение к серверу 1С...\",\r\n    \"Подключение установлено успешно\",\r\n    \"Выгрузка конфигурации...\",\r\n    \"Конфигурация выгружена (УТ 11.4.16.242)\",\r\n    \"Поиск установленных расширений...\",\r\n    \"Найдено расширений: 3\",\r\n    \"Анализ расширения: КастомныеДоработки\",\r\n    \"Найдено переопределенных объектов: 5\",\r\n    \"Анализ переопределенных процедур и функций...\",\r\n    \"Найдено переопределенных методов: 6\",\r\n    \"Анализ завершен успешно\"\r\n];\r\n\r\nconst AnalysisView = ({ database, onComplete, onCancel }) => {\r\n    const manualAnalysis = useMutation({\r\n        mutationFn: setCronSettings,\r\n        onError: (error) => {\r\n            console.log(error)\r\n        },\r\n        onSuccess: () => {\r\n            // обновим кэш\r\n            queryClient.invalidateQueries({\r\n                queryKey: ['databases']\r\n            }).then(r => {});\r\n        },\r\n    });\r\n\r\n    return null\r\n\r\n\r\n    const [currentStep, setCurrentStep] = useState(0);\r\n    const [logs, setLogs] = useState([]);\r\n    const [showLogs, setShowLogs] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n    const logEndRef = useRef(null);\r\n    const steps = [\r\n        \"Подключение к серверу 1С...\",\r\n        \"Выгрузка конфигурации...\",\r\n        \"Анализ расширений...\",\r\n        \"Обработка метаданных...\"\r\n    ];\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(`Начало анализа базы данных: ${database.Name}`);\r\n\r\n        const analysisTimer = setTimeout(() => {\r\n            let logIndex = 0;\r\n            const logInterval = setInterval(() => {\r\n                if (logIndex < analysisLog.length) {\r\n                    setLogs(prev => [...prev, analysisLog[logIndex]]);\r\n                    setProgress(Math.floor((logIndex + 1) / analysisLog.length * 100));\r\n                    logIndex++;\r\n                } else {\r\n                    clearInterval(logInterval);\r\n                    console.log(`Анализ завершен для базы: ${database.Name}`);\r\n                    setTimeout(() => onComplete(database.ID), 1000);\r\n                }\r\n            }, 300);\r\n\r\n            const stepInterval = setInterval(() => {\r\n                setCurrentStep(prev => {\r\n                    if (prev < steps.length - 1) {\r\n                        return prev + 1;\r\n                    } else {\r\n                        clearInterval(stepInterval);\r\n                        return prev;\r\n                    }\r\n                });\r\n            }, 800);\r\n\r\n            return () => {\r\n                clearInterval(logInterval);\r\n                clearInterval(stepInterval);\r\n            };\r\n        }, 500);\r\n\r\n        return () => clearTimeout(analysisTimer);\r\n    }, [database.ID]);\r\n\r\n    useEffect(() => {\r\n        if (logEndRef.current) {\r\n            logEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    }, [logs]);\r\n\r\n    return (\r\n        <div className=\"analysis-view\">\r\n            <div className=\"analysis-status\">\r\n                <div className=\"spinner\"></div>\r\n                <div className=\"status-text\">Анализ базы: {database.Name}</div>\r\n                <div className=\"substatus-text\">{steps[currentStep]}</div>\r\n                <div className=\"substatus-text\">Прогресс: {progress}%</div>\r\n            </div>\r\n\r\n            <div className=\"log-section\">\r\n                <div className=\"card\">\r\n                    <button\r\n                        className=\"btn btn--secondary log-toggle\"\r\n                        onClick={() => setShowLogs(!showLogs)}\r\n                    >\r\n                        {showLogs ? 'Скрыть лог анализа' : 'Показать лог анализа'}\r\n                    </button>\r\n\r\n                    {showLogs && (\r\n                        <div className=\"log-viewer\">\r\n                            {logs.map((log, index) => (\r\n                                <div key={index} className=\"log-entry\">\r\n                                    {log}\r\n                                </div>\r\n                            ))}\r\n                            <div ref={logEndRef} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnalysisView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}