{"ast":null,"code":"import _objectSpread from\"D:/GIT/1\\u0441-extensions-info/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8080/api/v1';// Базовая функция для HTTP запросов\nconst apiRequest=async function(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=\"\".concat(API_BASE_URL).concat(endpoint);const config=_objectSpread({headers:_objectSpread({'Content-Type':'application/json'},options.headers)},options);try{const response=await fetch(url,config);if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.error||\"HTTP error! status: \".concat(response.status));}return await response.json();}catch(error){console.error('API request failed:',error);throw error;}};// Получить всех пользователей\nexport const getSettings=()=>{return apiRequest('/getSettings');};// Получить пользователя по ID\nexport const getUserById=id=>{return apiRequest(\"/users/\".concat(id));};// Создать нового пользователя\nexport const createUser=userData=>{return apiRequest('/users',{method:'POST',body:JSON.stringify(userData)});};// Обновить пользователя\nexport const updateUser=(id,userData)=>{return apiRequest(\"/users/\".concat(id),{method:'PUT',body:JSON.stringify(userData)});};// Удалить пользователя\nexport const deleteUser=id=>{return apiRequest(\"/users/\".concat(id),{method:'DELETE'});};// Проверить состояние API\nexport const healthCheck=()=>{return apiRequest('/health');};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","apiRequest","endpoint","options","arguments","length","undefined","url","concat","config","_objectSpread","headers","response","fetch","ok","errorData","json","catch","Error","error","status","console","getSettings","getUserById","id","createUser","userData","method","body","JSON","stringify","updateUser","deleteUser","healthCheck"],"sources":["D:/GIT/1с-extensions-info/frontend/src/services/settingservice.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api/v1';\n\n// Базовая функция для HTTP запросов\nconst apiRequest = async (endpoint, options = {}) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n    ...options,\n  };\n\n  try {\n    const response = await fetch(url, config);\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('API request failed:', error);\n    throw error;\n  }\n};\n\n// Получить всех пользователей\nexport const getSettings = () => {\n  return apiRequest('/getSettings');\n};\n\n// Получить пользователя по ID\nexport const getUserById = (id) => {\n  return apiRequest(`/users/${id}`);\n};\n\n// Создать нового пользователя\nexport const createUser = (userData) => {\n  return apiRequest('/users', {\n    method: 'POST',\n    body: JSON.stringify(userData),\n  });\n};\n\n// Обновить пользователя\nexport const updateUser = (id, userData) => {\n  return apiRequest(`/users/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(userData),\n  });\n};\n\n// Удалить пользователя\nexport const deleteUser = (id) => {\n  return apiRequest(`/users/${id}`, {\n    method: 'DELETE',\n  });\n};\n\n// Проверить состояние API\nexport const healthCheck = () => {\n  return apiRequest('/health');\n};"],"mappings":"4HAAA,KAAM,CAAAA,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,8BAA8B,CAEpF;AACA,KAAM,CAAAC,UAAU,CAAG,cAAAA,CAAOC,QAAQ,CAAmB,IAAjB,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC9C,KAAM,CAAAG,GAAG,IAAAC,MAAA,CAAMX,YAAY,EAAAW,MAAA,CAAGN,QAAQ,CAAE,CAExC,KAAM,CAAAO,MAAM,CAAAC,aAAA,EACVC,OAAO,CAAAD,aAAA,EACL,cAAc,CAAE,kBAAkB,EAC/BP,OAAO,CAACQ,OAAO,CACnB,EACER,OAAO,CACX,CAED,GAAI,CACF,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACN,GAAG,CAAEE,MAAM,CAAC,CAEzC,GAAI,CAACG,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAO,CAAC,CAAC,CAAC,CAAC,CACzD,KAAM,IAAI,CAAAC,KAAK,CAACH,SAAS,CAACI,KAAK,yBAAAX,MAAA,CAA2BI,QAAQ,CAACQ,MAAM,CAAE,CAAC,CAC9E,CAEA,MAAO,MAAM,CAAAR,QAAQ,CAACI,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOG,KAAK,CAAE,CACdE,OAAO,CAACF,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,WAAW,CAAGA,CAAA,GAAM,CAC/B,MAAO,CAAArB,UAAU,CAAC,cAAc,CAAC,CACnC,CAAC,CAED;AACA,MAAO,MAAM,CAAAsB,WAAW,CAAIC,EAAE,EAAK,CACjC,MAAO,CAAAvB,UAAU,WAAAO,MAAA,CAAWgB,EAAE,CAAE,CAAC,CACnC,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,UAAU,CAAIC,QAAQ,EAAK,CACtC,MAAO,CAAAzB,UAAU,CAAC,QAAQ,CAAE,CAC1B0B,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAC/B,CAAC,CAAC,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAK,UAAU,CAAGA,CAACP,EAAE,CAAEE,QAAQ,GAAK,CAC1C,MAAO,CAAAzB,UAAU,WAAAO,MAAA,CAAWgB,EAAE,EAAI,CAChCG,MAAM,CAAE,KAAK,CACbC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAC/B,CAAC,CAAC,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAM,UAAU,CAAIR,EAAE,EAAK,CAChC,MAAO,CAAAvB,UAAU,WAAAO,MAAA,CAAWgB,EAAE,EAAI,CAChCG,MAAM,CAAE,QACV,CAAC,CAAC,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAM,WAAW,CAAGA,CAAA,GAAM,CAC/B,MAAO,CAAAhC,UAAU,CAAC,SAAS,CAAC,CAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}