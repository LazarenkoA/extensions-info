{"ast":null,"code":"var _jsxFileName = \"D:\\\\GIT\\\\1\\u0441-extensions-info\\\\frontend\\\\src\\\\pages\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { getBaseSettings } from '../services/settingservice';\nimport UserCard from '../components/UserCard';\nimport UserModal from '../components/UserModal';\nimport './Settings.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const {\n    data: settings,\n    isLoading,\n    error\n  } = useQuery({\n    queryKey: ['settings'],\n    queryFn: getBaseSettings,\n    select: data => data.data\n  });\n  const handleEditUser = user => {\n    setSelectedUser(user);\n    setIsModalOpen(true);\n  };\n  const handleCreateUser = () => {\n    setSelectedUser(null);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedUser(null);\n  };\n  const handleOption1 = () => {\n    alert(\"Создать PostgreSQL базу\");\n    setIsOpen(false); // закрыть меню после клика\n  };\n  const handleOption2 = () => {\n    alert(\"Создать MySQL базу\");\n    setIsOpen(false);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0435\\u043A...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-page\",\n    children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        onClick: () => setIsOpen(!isOpen),\n        children: \"Another action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        onClick: () => setIsOpen(!isOpen),\n        children: \"Something else\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-list\",\n      children: settings && settings.length > 0 ? settings.map(user => /*#__PURE__*/_jsxDEV(UserCard, {\n        user: user,\n        onEdit: handleEditUser\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-settings\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(UserModal, {\n      user: selectedUser,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"a0vCIuweZfhM9fqREuWS8u/cejc=\", false, function () {\n  return [useQuery];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useQuery","getBaseSettings","UserCard","UserModal","Dropdown","DropdownButton","jsxDEV","_jsxDEV","Settings","_s","selectedUser","setSelectedUser","isModalOpen","setIsModalOpen","isOpen","setIsOpen","data","settings","isLoading","error","queryKey","queryFn","select","handleEditUser","user","handleCreateUser","handleCloseModal","handleOption1","alert","handleOption2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","Item","onClick","length","map","onEdit","id","onClose","_c","$RefreshReg$"],"sources":["D:/GIT/1с-extensions-info/frontend/src/pages/Settings.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { getBaseSettings } from '../services/settingservice';\nimport UserCard from '../components/UserCard';\nimport UserModal from '../components/UserModal';\nimport './Settings.css';\n\n\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst Settings = () => {\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { data: settings, isLoading, error } = useQuery({\n    queryKey: ['settings'],\n    queryFn: getBaseSettings,\n    select: (data) => data.data,\n  });\n\n  const handleEditUser = (user) => {\n    setSelectedUser(user);\n    setIsModalOpen(true);\n  };\n\n  const handleCreateUser = () => {\n    setSelectedUser(null);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedUser(null);\n  };\n\n  const handleOption1 = () => {\n    alert(\"Создать PostgreSQL базу\");\n    setIsOpen(false); // закрыть меню после клика\n  };\n\n  const handleOption2 = () => {\n    alert(\"Создать MySQL базу\");\n    setIsOpen(false);\n  };\n\n\n  if (isLoading) {\n    return <div className=\"loading\">Загрузка настроек...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">Ошибка: {error.message}</div>;\n  }\n\n  return (\n    <div className=\"settings-page\">\n\n      <DropdownButton >\n        <Dropdown.Item onClick={ () =>  setIsOpen(!isOpen)}>Another action</Dropdown.Item>\n        <Dropdown.Item onClick={ () =>  setIsOpen(!isOpen)}>Something else</Dropdown.Item>\n      </DropdownButton>\n\n      {/*<div className=\"settings-header\">*/}\n      {/*  <h2>Подключение к базам</h2>*/}\n      {/*  <button onClick={ () =>  setIsOpen(!isOpen)} className=\"btn btn-primary\">*/}\n      {/*    Добавить базу*/}\n      {/*  </button>*/}\n      {/*</div>*/}\n\n\n\n      <div className=\"settings-list\">\n        {settings && settings.length > 0 ? (\n          settings.map((user) => (\n            <UserCard\n              key={user.id}\n              user={user}\n              onEdit={handleEditUser}\n            />\n          ))\n        ) : (\n          <div className=\"no-settings\">\n            <p>Настройки не найдены</p>\n          </div>\n        )}\n      </div>\n\n      {isModalOpen && (\n        <UserModal\n          user={selectedUser}\n          onClose={handleCloseModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Settings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}