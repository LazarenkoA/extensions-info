{"ast":null,"code":"var _jsxFileName = \"D:\\\\GIT\\\\1\\u0441-extensions-info\\\\frontend\\\\src\\\\components\\\\TreeNodeComponent.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useState,\n  useEffect,\n  useRef\n} = React;\nconst DetailsPanel = ({\n  selectedItem,\n  extension,\n  onFunctionClick\n}) => {\n  if (!selectedItem || !database) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-panel hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"details-title\",\n          children: \"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state-icon\",\n            children: \"\\uD83D\\uDCCB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043A\\u0442 \\u043C\\u0435\\u0442\\u0430\\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0438\\u043B\\u0438 \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u044E \\u0434\\u043B\\u044F \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u043F\\u0435\\u0440\\u0435\\u043E\\u043F\\u0440\\u0435\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  }\n  const renderMetadataDetails = objectData => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"details-title\",\n          children: [\"\\u041F\\u0435\\u0440\\u0435\\u043E\\u043F\\u0440\\u0435\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u044F: \", objectData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-content\",\n        children: objectData.extensions.map((ext, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"extension-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extension-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"extension-name\",\n              children: ext.extension\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extension-body\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"changes-list\",\n              children: ext.changes.map((change, changeIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: change\n              }, changeIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  };\n  const renderFunctionDetails = functionData => {\n    const getOverrideTypeClass = type => {\n      switch (type) {\n        case 'Вместо':\n          return 'vmestore';\n        case 'ИзменениеИКонтроль':\n          return 'izmenenie-i-kontrol';\n        case 'Перед':\n          return 'pered';\n        case 'После':\n          return 'posle';\n        default:\n          return 'posle';\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"details-title\",\n          children: [\"\\u041F\\u0435\\u0440\\u0435\\u043E\\u043F\\u0440\\u0435\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u044F \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u0438: \", functionData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-content\",\n        children: functionData.extensions.map((ext, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"extension-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extension-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"extension-name\",\n              children: ext.extension\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extension-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"function-override\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"override-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `override-type-badge ${getOverrideTypeClass(ext.overrideType)}`,\n                  children: ext.overrideType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"function-name-link\",\n                  onClick: () => onFunctionClick(ext),\n                  children: ext.functionName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"override-description\",\n                children: ext.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Determine if it's a metadata object or function\n  const objectData = database.objectOverrides[selectedItem.id];\n  const functionData = database.functionOverrides[selectedItem.id];\n  if (objectData) {\n    return renderMetadataDetails(objectData);\n  } else if (functionData) {\n    return renderFunctionDetails(functionData);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"details-title\",\n        children: \"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0438 \\u043D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-icon\",\n          children: \"\\u2753\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u043F\\u0435\\u0440\\u0435\\u043E\\u043F\\u0440\\u0435\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u044F\\u0445 \\u0434\\u043B\\u044F \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0433\\u043E \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u0430 \\u043D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_c = DetailsPanel;\nconst TreeNode = ({\n  node,\n  level = 0\n}) => {\n  _s();\n  const [expanded, setExpanded] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n  const [isSelected, setSelectedItem] = useState(null);\n  const handleToggle = () => {\n    setExpanded(!expanded);\n  };\n  const hasChildren = node.Children && node.Children.length > 0;\n  const hasFunctions = node.Funcs && node.Funcs.length > 0;\n  //const hasModules = node.modules && node.modules.length > 0;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree-node\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-item ${expanded ? 'expanded' : ''} ${isSelected ? 'selected' : ''}`\n      //onClick={isSelectable ? handleItemClick : handleToggle}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-toggle\",\n        onClick: handleToggle,\n        children: hasChildren || hasFunctions ? expanded ? '▼' : '▶' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tree-icon ${node.Type === 'function' ? 'function' : node.Type === 'module' ? 'item' : node.Type}`,\n        children: node.Type === 'folder' ? '📁' : node.Type === 'module' ? '⚙️' : node.Type === 'function' ? '⚡' : '📄'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-label\",\n        children: node.ObjectName || node.Type || node.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), node.status && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tree-status ${node.status}`,\n        children: node.status === 'modified' ? 'Изменен' : node.status === 'added' ? 'Добавлен' : 'Удален'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-children\",\n      children: [hasChildren && node.Children.map((child, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: child,\n        level: level + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }, this)), hasFunctions && node.Funcs.map((func, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: func,\n        level: level + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n_s(TreeNode, \"ztWtWEdRBwRrACFKab2TJK7EMs8=\");\n_c2 = TreeNode;\nexport default TreeNode;\nvar _c, _c2;\n$RefreshReg$(_c, \"DetailsPanel\");\n$RefreshReg$(_c2, \"TreeNode\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","useState","useEffect","useRef","DetailsPanel","selectedItem","extension","onFunctionClick","database","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderMetadataDetails","objectData","name","extensions","map","ext","index","changes","change","changeIndex","renderFunctionDetails","functionData","getOverrideTypeClass","type","overrideType","onClick","functionName","description","objectOverrides","id","functionOverrides","_c","TreeNode","node","level","_s","expanded","setExpanded","showDetails","setShowDetails","isSelected","setSelectedItem","handleToggle","hasChildren","Children","length","hasFunctions","Funcs","Type","ObjectName","Name","status","child","func","_c2","$RefreshReg$"],"sources":["D:/GIT/1с-extensions-info/frontend/src/components/TreeNodeComponent.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst { useState, useEffect, useRef } = React;\r\n\r\nconst DetailsPanel = ({ selectedItem, extension, onFunctionClick }) => {\r\n    if (!selectedItem || !database) {\r\n        return (\r\n            <div className=\"details-panel hidden\">\r\n                <div className=\"details-header\">\r\n                    <h3 className=\"details-title\">Детали</h3>\r\n                </div>\r\n                <div className=\"details-content\">\r\n                    <div className=\"empty-state\">\r\n                        <div className=\"empty-state-icon\">📋</div>\r\n                        <h4>Выберите элемент</h4>\r\n                        <p>Выберите объект метаданных или функцию для просмотра переопределений</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderMetadataDetails = (objectData) => {\r\n        return (\r\n            <div className=\"details-panel\">\r\n                <div className=\"details-header\">\r\n                    <h3 className=\"details-title\">Переопределения: {objectData.name}</h3>\r\n                </div>\r\n                <div className=\"details-content\">\r\n                    {objectData.extensions.map((ext, index) => (\r\n                        <div key={index} className=\"extension-section\">\r\n                            <div className=\"extension-header\">\r\n                                <h4 className=\"extension-name\">{ext.extension}</h4>\r\n                            </div>\r\n                            <div className=\"extension-body\">\r\n                                <ul className=\"changes-list\">\r\n                                    {ext.changes.map((change, changeIndex) => (\r\n                                        <li key={changeIndex}>{change}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderFunctionDetails = (functionData) => {\r\n        const getOverrideTypeClass = (type) => {\r\n            switch (type) {\r\n                case 'Вместо': return 'vmestore';\r\n                case 'ИзменениеИКонтроль': return 'izmenenie-i-kontrol';\r\n                case 'Перед': return 'pered';\r\n                case 'После': return 'posle';\r\n                default: return 'posle';\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className=\"details-panel\">\r\n                <div className=\"details-header\">\r\n                    <h3 className=\"details-title\">Переопределения функции: {functionData.name}</h3>\r\n                </div>\r\n                <div className=\"details-content\">\r\n                    {functionData.extensions.map((ext, index) => (\r\n                        <div key={index} className=\"extension-section\">\r\n                            <div className=\"extension-header\">\r\n                                <h4 className=\"extension-name\">{ext.extension}</h4>\r\n                            </div>\r\n                            <div className=\"extension-body\">\r\n                                <div className=\"function-override\">\r\n                                    <div className=\"override-header\">\r\n                    <span className={`override-type-badge ${getOverrideTypeClass(ext.overrideType)}`}>\r\n                      {ext.overrideType}\r\n                    </span>\r\n                                        <span\r\n                                            className=\"function-name-link\"\r\n                                            onClick={() => onFunctionClick(ext)}\r\n                                        >\r\n                      {ext.functionName}\r\n                    </span>\r\n                                    </div>\r\n                                    <div className=\"override-description\">\r\n                                        {ext.description}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Determine if it's a metadata object or function\r\n    const objectData = database.objectOverrides[selectedItem.id];\r\n    const functionData = database.functionOverrides[selectedItem.id];\r\n\r\n    if (objectData) {\r\n        return renderMetadataDetails(objectData);\r\n    } else if (functionData) {\r\n        return renderFunctionDetails(functionData);\r\n    }\r\n\r\n    return (\r\n        <div className=\"details-panel\">\r\n            <div className=\"details-header\">\r\n                <h3 className=\"details-title\">Детали недоступны</h3>\r\n            </div>\r\n            <div className=\"details-content\">\r\n                <div className=\"empty-state\">\r\n                    <div className=\"empty-state-icon\">❓</div>\r\n                    <h4>Данные не найдены</h4>\r\n                    <p>Информация о переопределениях для выбранного элемента недоступна</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TreeNode = ({ node, level = 0 }) => {\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [showDetails, setShowDetails] = useState(false);\r\n    const [isSelected, setSelectedItem] = useState(null);\r\n\r\n    const handleToggle = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const hasChildren = node.Children && node.Children.length > 0;\r\n    const hasFunctions = node.Funcs && node.Funcs.length > 0;\r\n    //const hasModules = node.modules && node.modules.length > 0;\r\n\r\n    return (\r\n        <div className=\"tree-node\">\r\n            <div\r\n                className={`tree-item ${expanded ? 'expanded' : ''} ${isSelected ? 'selected' : ''}`}\r\n                //onClick={isSelectable ? handleItemClick : handleToggle}\r\n            >\r\n                <div className=\"tree-toggle\" onClick={handleToggle}>\r\n                    {(hasChildren || hasFunctions) ? (expanded ? '▼' : '▶') : ''}\r\n                </div>\r\n                <div className={`tree-icon ${node.Type === 'function' ? 'function' : node.Type === 'module' ? 'item' : node.Type}`}>\r\n                    {node.Type === 'folder' ? '📁' :\r\n                        node.Type === 'module' ? '⚙️' :\r\n                            node.Type === 'function' ? '⚡' : '📄'}\r\n                </div>\r\n                <div className=\"tree-label\">\r\n                    {node.ObjectName || node.Type || node.Name}\r\n                </div>\r\n                {node.status && (\r\n                    <div className={`tree-status ${node.status}`}>\r\n                        {node.status === 'modified' ? 'Изменен' :\r\n                            node.status === 'added' ? 'Добавлен' : 'Удален'}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {expanded && (\r\n                <div className=\"tree-children\">\r\n                    {hasChildren && node.Children.map((child, index) => (\r\n                        <TreeNode\r\n                            key={index}\r\n                            node={child}\r\n                            level={level + 1}\r\n                        />\r\n                    ))}\r\n                    {/*{hasModules && node.modules.map((module, index) => (*/}\r\n                    {/*    <TreeNode*/}\r\n                    {/*        key={index}*/}\r\n                    {/*        node={module}*/}\r\n                    {/*        level={level + 1}*/}\r\n                    {/*        type=\"module\"*/}\r\n                    {/*    />*/}\r\n                    {/*))}*/}\r\n                    {hasFunctions && node.Funcs.map((func, index) => (\r\n                        <TreeNode\r\n                            key={index}\r\n                            node={func}\r\n                            level={level + 1}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default TreeNode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}